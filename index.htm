<!--
/********************************************************
 * Author:  Omar Hesham, 2015.
 *          Bruno St-Aubin, 2017.
 * Advanced Real-Time Simulation Lab.
 * Carleton University, Ottawa, Canada.​​
 * License: GNU General Public License v3.0
 *
 * Project: Web-based Cell-DEVS Visualizer
 */
-->
<!DOCTYPE html>
<head>
   <link rel="stylesheet" href="css/style.css">
   <link rel='shortcut icon' href='favicon.ico'>
   <meta name="viewport" content="user-scalable=no" />
   <title>CellDEVS Simulation Viewer | ARS Lab | Carleton University</title>
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>

<body>
   <div id="stickyDivv">
      <div id="header">
         <div id="title">
            <h3>
				<a href="http://vs3.sce.carleton.ca/wordpress/" target="_blank">ARSLab</a>
			</h3>

            <h2>
				<a style='color:red;' href="http://cell-devs.sce.carleton.ca/intranet/webviewer/" target="_blank">CellDEVS Simulation Viewer</a>
			</h2>

            <span id='alphaTag'><b> alpha</b></span>

			<span id="linksTag">
				<a href="https://goo.gl/vhQE03" target="_blank">&#128304; tutorials</a> &emsp;
				<a href="https://goo.gl/S7agHi" target="_blank">&#9733; samples</a> &emsp;
				<a href="mailto:omar.hesham@carleton.ca?Subject=[CellDEVSViewer][alpha]" target="_blank">&#9749; report a problem </a>
			</span>
         </div>
      </div>

     <br>
	<div id='min-button-window-input' style='display:inline-flex;'>
     </div>
      <div id='min-button-window-canvas' style='display:inline-flex;'>
     </div>
      <div id='min-button-window-stats' style='display:inline-flex;'>
     </div>
     <div id='basic-view'>
        <div id="inputzone">
            <div id="dropzone">
				<form>
					Upload type:
					<input type="radio" name="action" id="standardOption" onclick='switchtoStandard()'><label for="standardOption">Standard</label>
					<input type="radio" name="action" id="riseOption" onclick='switchtoRISE()'><label for="riseOption">RISE</label>
				</form>
                <button style='box-shadow:none; float:right;' onclick='minInputZone()'><i class="fa fa-minus-square" aria-hidden="true"></i></button>
               <div style="text-align: left; margin-left:10px;color:#aaa"><br><b>Input files</b> - Drag and drop or click to browse:<br></div>
		<div id="Standard">
            <div class="dz" id="maFile">
                  <br>Model <br>(.ma)
                  <input onchange="inp.processDroppedFiles(this)" type="file" id="ma-file" multiple />
                  <div class='statBox'></div>
               </div>

               <div class="dz" id="valFile">
                  <br>Initial Values<br> (.val)
                  <input onchange="inp.processDroppedFiles(this)" type="file" id="val-file" multiple />
                  <div class='statBox'></div>
               </div>

               <div class="dz" id="logFile">
                  <br>Simulation Log<br> (.log)
                  <input onchange="inp.processDroppedFiles(this)" type="file" id="log-file" multiple />
                  <div class='statBox'></div>
               </div>

               <div class="dz" id="paletteFile">
                  <br>Color Palette<br> (.pal)
                  <input onchange="inp.processDroppedFiles(this)" type="file" id="pal-file" multiple />
                  <div class='statBox'></div>
               </div>
			                  
			   <br><br>
               &emsp;
               <button onclick="grid.loadSimulation()" id="BtnParseY">Load Simulation</button>
               <button style='background-color:green;' onclick="grid.loadTestSimulation()" id="BtnParseY">Load Test Files (in progress)</button>
               <br><br>
			   
		</div>
		
		<div id="RISE" hidden>
			<div class="dz" id="xmlFile">
				<br> XML file (.xml)
				<input onchange="grid.loadRISExml(this)" type="file" id="xml-file"accept="text/xml"/>
				<div class='statBox'></div>
			</div>
			<div class="dz" id="zipFile">
				<br>Zipfile (.zip)
				<input onchange="grid.loadRISEzip(this)" type="file" id="zip-file" accept=".zip"/>
				<div class='statBox'></div>
			</div>
						   
			<br><br>
            &emsp;
			<button id="uploadRise" onclick="startSimulate()">Simulate on RISE</button>
			<button id="Simulate" disabled>Run Simulation</button>
			<br><br>
		</div>


            </div>

                  <div id="LayersDiv" style='display:none;'>
                     &nbsp;&#8801; Detected layers:
                  <div id="LayersList" hidden></div>
               </div>  
         </div>


   <h4>Advanced View </h4>
     <label class="switch">
      Basic View
       <input id='basic-view-button' type='checkbox' name='view'/>
       <span class='slider'></span>
     </label> <br><br>


     </div>

     <div id='advanced-view' hidden>
      <div id="controls" style='border-style:dashed;background-color:#050e17'>

   <div class='rowDiv'>
     <div class ='rowDiv' style='display: inline-table; text-align:left;padding:15px;'>
      <ul>
      <h4>Chart Selection</h4>
         <li>
            <label><input type="checkbox" id="showStateFreq" checked>States Frequency</label>
         </li>
         <li>
            <label><input type="checkbox" id="showTransitions" checked>Transitions</label>
         </li>
         <li>
            <label><input type="checkbox" id="showStats" checked>Statistics</label>
         </li>
      </ul>
       </div>
         &nbsp;
         <div class='rowDiv' style='display: inline-table; text-align:left;padding:15px;'>
            <ul>
            <h4>Canvas Options</h4>

            <li>Max decimals: <input type="number" value="1" id="precision" step='1' min="0" max="20" oninput="grid.updatePrecision()" />
          &nbsp;</li>
            <li><label><input onclick="grid.toggleGridOverlay()" type="checkbox" id="showGridOverlay">Grid overlay</label> <input type="color" id="gridOverlayColor" value="#787882" oninput='grid.updateGridOverlayColor()'></li>
         </ul>
            <div style="display:none;">
            Layout columns: <input type="number" value="1" id="layoutColumns" step='1' min="1" oninput="grid.updateLayoutColumns()" />
            </div>
         </div>

         <div class='rowDiv' style='display:inline-table; text-align:left; padding:15px;'>
         <div id="chartControls">
         <div class='rowDiv'>Track States:  <input type="text" value="" id="chart_states" /></div>
         <button onclick="grid.showPalette()" id="BtnEditPalette" style="display: none">Edit Palette</button>
     </div>
  </div>


      </div>
      </div>

     </div>
   </div>

      <div id='player' style='padding:25px;'>
       <div id='play-controls' class='rowDiv' style='border-style:dashed;background-color:#050e17' hidden>
         <h4> Player Controls </h4>
            <span id="timelineControls">
            <button id="BtnRewind"     onclick="grid.rewindPlayback();">&#x25C0;<B>I</B></button>
            <button id="BtnPlayBw"     onclick="grid.playFramesBackwards()">&#x25C1;&#x25C1;</button>
            <button id="BtnStepBw"     onclick="grid.pausePlayback();grid.prevFrame()">&#x25C1;<B>I</B></button>
            <button id="BtnPlay"    onclick="grid.playFrames()">&#x25B6;</button>
            <button id="BtnStepFw"     onclick="grid.pausePlayback();grid.nextFrame()"><B>I</B>&#x25B6;</button>
            <button id="BtnLastFrame"  onclick="grid.lastFrame()">&#x25B6;<B>I</B></button>
            <input type="range" id="timelineSeek" oninput='grid.seekTimeline()' onchange="grid.seekTimeline()" min="0" max="1" >
            </span>
            <label><input onclick="grid.toggleLoop()" type="checkbox" id="loop">Loop</label> <span class="vsep"></span>
            <div id="timelineStatus">Frame: 0 &emsp; Time: --:--:--:---</div>

            Pixels/cell (zoom):<input type="number" value="25" id="cellScale" step="1" min="1" max="500" oninput="grid.reCSSGrid(this)" />
            <span class="vsep"></span>
            Framerate (fps): <input type="number" value="15" id="framerate" min="1" max="500" oninput="grid.updateFPS()" /><span class="vsep"></span>
            <button onclick="grid.recordFrames()" id="BtnRecord"><b style="color:#A44A4A">&#x25cf;</b> Record Video</button>
            <span class="hideMe">Quality (0 - 1):<input type="number" value="0.95" id="vidQual" step=".05" min="0" max="1"/></span>
            <span id="videoLink" style="display:none">&nbsp;&nbsp;Video ready: <a id="videoViewLink" style="display:none;color:#AB7D6C;">watch &#x1f3a5;</a> |
            <a id="videoDownloadLink" style="display:none;color:#AB7D6C;">download &#8681;</a>
            </span>
            <br><br>
         </div>
      </div>

   <!-- END OF STICKY DIV - END OF MAIN CONTENT -->

   <div id="chartsDiv" class="charts-container" style='text-align:right;padding-right:20px;'></div>
   <div id="StatsOverlay" style= "display: none"></div>
   <div id="canvyDiv" style="display: none">
   <div class="canvas-btn-container">
	  <button type='button' class='button' onclick='minCanvasZone()'><i class="fa fa-minus-square" aria-hidden="true"></i></button>
   	  <button type='button' title="Zoom on cells" class="button" id=zoomButton style="background-color:red"; onclick="toggleZoom()";>&#x1F50D;</button>
	  <button type='button' title="Information Tooltip" class="button" id=tipButton  style="background-color:red"; onclick="toggleTip()";>&#x1f6c8;</button>
	  <button type='button' title="Show Values" class="button" id=showValuesButton  style="background-color:red"; onclick="grid.toggleValueDisplay()";>&#x23;</button>
	  <button type='button' title="Fixed-Precision Values" class="button" id=showFixedPrecision  style="background-color:red" onclick="grid.toggleFixedPrecision()"; disabled>.xx</button>
	  <button type='button' title="Show Zeros" class="button" id=showZeros  style="background-color:red"; onclick="grid.toggleZeroDisplay()"; disabled>&#x30;</button>
	  <button type='button' title="Clear Selection" class="button" id=clearSelection  style="background-color:white"; onclick="clearSelectedCells()";>X</button>
	  <button type='button' title="Show Stats" class="button" id=showStats  style="background-color:white"; onclick="showStats()";>S</button>
	</div>
      <canvas id="canvy" style= "display: none"></canvas>
	  <canvas id="zoom" width= "400" height="400" style="position:absolute; top:0; left:0; display:none"></canvas>
	  <div id=tip></div>
   </div>
   <dialog id="lineGraphDialog">
    <style>
      .line-chart
      {
          border: 1px solid lightgray;
      }
    </style>
		<div id='lineBox'>
          </div>	
        <footer>
          <button onclick='closeLineDialog();' type='reset'>Close</button>
        </footer>
    </dialog>
	
	
   <script src="references/whammy.js"></script>
   <script src="references/d3-4.12.0/d3.min.js"></script>
   <script src="references/d3.legend.js"></script>
   <script src="src/view.js"></script>
   <script src="src/data.js"></script>
   <script src="src/model.js"></script>
   <script src="src/charting.js"></script>
   <script src="src/recording.js"></script>
   <script src="references/jszip.js"></script>

   <footer>
      <small>&copy; <a href='http://omarhesham.com/arslab'>Omar Hesham</a> |
      <a href='#'>Bruno St-Aubin</a> |
      <a href='http://cell-devs.sce.carleton.ca/ars/' target='_blank'>ARS Lab</a> |
      <a href='http://carleton.ca' target='_blank'>Carleton University</a><br>
      <code>Viscrete API v0.080 (<a href='changelog.htm' target='_blank'>changelog</a>)</code>
      </small>
   </footer>
</body>